Description:
  This template deploys k8s master/worker nodes in private subnets.


Parameters:
  ServiceName:
    Type: String


Resources:
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
      ImageId: ami-0756ed94dd77be215
      InstanceType: t2.small
      KeyName: udacity-capstone
      SubnetId:
        Fn::ImportValue: !Sub ${ServiceName}-PublicSubnetMaster

  ControlPlaneNode:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
      ImageId: ami-0756ed94dd77be215
      InstanceType: t2.medium
      KeyName: udacity-capstone
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ServiceName}-SecurityGroupForInstances
      SubnetId:
        Fn::ImportValue: !Sub ${ServiceName}-PrivateSubnetMaster
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt-get update -y
          apt-get install -y docker.io
          systemctl start docker
          systemctl enable docker
          apt-get install -y apt-transport-https curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
          deb https://apt.kubernetes.io/ kubernetes-xenial main
          EOF
          apt-get update
          apt-get install -y kubelet kubeadm kubectl
          apt-mark hold kubelet kubeadm kubectl

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
      ImageId: ami-0756ed94dd77be215
      InstanceType: t2.medium
      KeyName: udacity-capstone
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt-get update -y
          apt-get install -y docker.io
          systemctl start docker
          systemctl enable docker
          apt-get install -y apt-transport-https curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
          deb https://apt.kubernetes.io/ kubernetes-xenial main
          EOF
          apt-get update
          apt-get install -y kubelet kubeadm kubectl
          apt-mark hold kubelet kubeadm kubectl
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${ServiceName}-SecurityGroupForInstances

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${ServiceName}-AutoScalingGroup
      LaunchConfigurationName: !Ref LaunchConfig
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub ${ServiceName}-PrivateSubnet1
        - Fn::ImportValue:
            !Sub ${ServiceName}-PrivateSubnet2
      MinSize: 3
      MaxSize: 6
      TargetGroupARNs:
        - Fn::ImportValue: !Sub ${ServiceName}-LoadBalancerTargetGroup


Outputs:
  BastionHost:
    Value: !Ref BastionHost
    Export:
      Name: !Sub ${ServiceName}-BastionHost

  ControlPlaneNode:
    Value: !Ref ControlPlaneNode
    Export:
      Name: !Sub ${ServiceName}-ControlPlaneNode

  ControlPlaneNodePrivateIp:
    Value: !GetAtt ControlPlaneNode.PrivateIp
    Export:
      Name: !Sub ${ServiceName}-ControlPlaneNodePIP
